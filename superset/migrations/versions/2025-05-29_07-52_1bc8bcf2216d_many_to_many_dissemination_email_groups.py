# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""many_to_many_dissemination_email_groups

Revision ID: 1bc8bcf2216d
Revises: dc9eb348ec83 # MAKE SURE THIS REVISES THE CORRECT PREVIOUS MIGRATION
Create Date: 2025-05-29 07:52:34.889317

"""

# revision identifiers, used by Alembic.
revision = '1bc8bcf2216d'
down_revision = 'dc9eb348ec83' # MAKE SURE THIS IS THE CORRECT PREVIOUS MIGRATION ID

from alembic import op
import sqlalchemy as sa
# from sqlalchemy.dialects import postgresql # Not needed for these specific changes

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dissemination_email_group_association',
    sa.Column('disseminated_bulletin_log_id', sa.Integer(), nullable=False),
    sa.Column('email_group_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['disseminated_bulletin_log_id'], ['disseminated_bulletin_logs.id'], ),
    sa.ForeignKeyConstraint(['email_group_id'], ['email_groups.id'], ),
    sa.PrimaryKeyConstraint('disseminated_bulletin_log_id', 'email_group_id')
    )
    with op.batch_alter_table('disseminated_bulletin_logs') as batch_op:
        batch_op.drop_column('email_group_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('disseminated_bulletin_logs') as batch_op:
        batch_op.add_column(sa.Column('email_group_id', sa.INTEGER(), autoincrement=False, nullable=True))
        # If you had a named foreign key constraint that was dropped, you might need to re-create it here.
        # e.g., batch_op.create_foreign_key('fk_disseminated_bulletin_logs_email_group_id', 'email_groups', ['email_group_id'], ['id'])

    op.drop_table('dissemination_email_group_association')
    # ### end Alembic commands ###