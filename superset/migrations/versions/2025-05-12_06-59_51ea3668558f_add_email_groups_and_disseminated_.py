# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
"""add email_groups and disseminated_bulletin_logs tables

Revision ID: 51ea3668558f
Revises: 926e51d55a29
Create Date: 2025-05-12 06:59:02.860155

"""

# revision identifiers, used by Alembic.
revision = '51ea3668558f'
down_revision = '926e51d55a29'

from alembic import op
import sqlalchemy as sa
# Removed: from sqlalchemy.dialects import postgresql # Not used in the cleaned version for these tables

def upgrade():
    # ### commands auto generated by Alembic - START ###
    # Create email_groups table
    op.create_table('email_groups',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('emails', sa.Text(), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=False),
    sa.Column('changed_on', sa.DateTime(), nullable=False),
    sa.Column('created_by_fk', sa.Integer(), nullable=True),
    sa.Column('changed_by_fk', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['changed_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['created_by_fk'], ['ab_user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    
    # Create disseminated_bulletin_logs table
    op.create_table('disseminated_bulletin_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bulletin_id', sa.Integer(), nullable=False),
    sa.Column('email_group_id', sa.Integer(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('subject_sent', sa.String(length=500), nullable=False),
    sa.Column('message_body_sent', sa.Text(), nullable=False),
    sa.Column('details', sa.Text(), nullable=True),
    sa.Column('disseminated_by_fk', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['bulletin_id'], ['bulletins.id'], ),
    sa.ForeignKeyConstraint(['disseminated_by_fk'], ['ab_user.id'], ),
    sa.ForeignKeyConstraint(['email_group_id'], ['email_groups.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### commands auto generated by Alembic - END ###
    
    # Note: Other op calls (drop_table, alter_column etc. for unrelated changes)
    # that were previously in this auto-generated script have been removed.
    # They should be handled by a separate migration if they are indeed necessary.

def downgrade():
    # ### commands auto generated by Alembic - START ###
    # Drop disseminated_bulletin_logs table
    op.drop_table('disseminated_bulletin_logs')
    
    # Drop email_groups table
    op.drop_table('email_groups')
    # ### commands auto generated by Alembic - END ###

    # Note: Other op calls that were previously in the auto-generated downgrade 
    # have been removed to keep this migration focused on the tables created above.
